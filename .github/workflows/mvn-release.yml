name: 'mvn-release'
run-name: "release -> version: ${{ inputs.version }}, next-snapshot: ${{ inputs.next-snapshot }}"
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release version: ex: 0.1.0'
        required: true
        type: string
        default: 'default'
      next-snapshot:
        description: 'next snapshot version: ex: 0.2.0-SNAPSHOT'
        required: true
        type: string
        default: 'default'

jobs:

  mvn-release:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'adopt'

    - name: 'use the github cache for the local mvn repo'
      id: cache
      uses: actions/cache@v3.2.6
      with:
        path: ~/.m2/repository
        key: localM2Repo
        restore-keys: |
          localM2Repo

    - name: 'do the mv release and the git stuff'
      id: release
      run: |
        
        git config --global user.email "noreply-actions@github.com"
        git config --global user.name "Github Actions"
        
        chmod +x *.sh
        
        version=${{ inputs.version }}
        if [ "${{ inputs.version }}" == "default" ]; then
          version=$(./get-release.sh)
        fi
        
        mvn versions:set -DnewVersion="${version}"
        mvn versions:commit
        
        git add .
        git commit -m "release version: ${version} [skip-ci]"
        git tag ${{ inputs.version }}
        
        mvn deploy
        
        next-snapshot=${{ inputs.next-snapshot }}
        if [ "${{ inputs.next-snapshot }}" == "default" ]; then
          next-snapshot=$(./get-next-snapshot.sh)
        fi
        
        mvn versions:set -DnewVersion="${next-snapshot}"
        mvn versions:commit
        
        git add .
        git commit -m "next snapshot: ${next-snapshot} [skip-ci]"
        
        git push --tags
        git push

      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'lets us kick the github release action'
      id: gh-release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: ${{ inputs.version }}
        name: Release ${{ inputs.version }}